{"version":3,"sources":["discourse/plugins/discourse-presence/acceptance/discourse-presence-test.js"],"sourcesContent":["define(\"discourse/plugins/discourse-presence/acceptance/discourse-presence-test\", [\"discourse/tests/helpers/qunit-helpers\", \"@ember/test-helpers\", \"qunit\", \"discourse/tests/helpers/presence-pretender\", \"discourse/models/user\", \"discourse/tests/helpers/select-kit-helper\"], function (_qunitHelpers, _testHelpers, _qunit, _presencePretender, _user, _selectKitHelper) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/qunit-helpers\",0,\"@ember/test-helpers\",0,\"qunit\",0,\"discourse/tests/helpers/presence-pretender\",0,\"discourse/models/user\",0,\"discourse/tests/helpers/select-kit-helper\"eaimeta@70e063a35619d71f\n\n  (0, _qunitHelpers.acceptance)(\"Discourse Presence Plugin\", function (needs) {\n    needs.user({\n      whisperer: true\n    });\n    needs.settings({\n      enable_whispers: true\n    });\n    (0, _qunit.test)(\"Doesn't break topic creation\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/\");\n      await (0, _testHelpers.click)(\"#create-topic\");\n      await (0, _testHelpers.fillIn)(\"#reply-title\", \"Internationalization Localization\");\n      await (0, _testHelpers.fillIn)(\".d-editor-input\", \"this is the *content* of a new topic post\");\n      await (0, _testHelpers.click)(\"#reply-control button.create\");\n      assert.strictEqual((0, _testHelpers.currentURL)(), \"/t/internationalization-localization/280\", \"it transitions to the newly created topic URL\");\n    });\n    (0, _qunit.test)(\"Publishes own reply presence\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/280\");\n      await (0, _testHelpers.click)(\"#topic-footer-buttons .btn.create\");\n      assert.ok((0, _qunitHelpers.exists)(\".d-editor-input\"), \"the composer input is visible\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/reply/280\"), [], \"does not publish presence for open composer\");\n      await (0, _testHelpers.fillIn)(\".d-editor-input\", \"this is the content of my reply\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/reply/280\"), [_user.default.current().id], \"publishes presence when typing\");\n      await (0, _testHelpers.click)(\"#reply-control button.create\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/reply/280\"), [], \"leaves channel when composer closes\");\n    });\n    (0, _qunit.test)(\"Uses whisper channel for whispers\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/280\");\n      await (0, _testHelpers.click)(\"#topic-footer-buttons .btn.create\");\n      assert.ok((0, _qunitHelpers.exists)(\".d-editor-input\"), \"the composer input is visible\");\n      await (0, _testHelpers.fillIn)(\".d-editor-input\", \"this is the content of my reply\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/reply/280\"), [_user.default.current().id], \"publishes reply presence when typing\");\n      const menu = (0, _selectKitHelper.default)(\".toolbar-popup-menu-options\");\n      await menu.expand();\n      await menu.selectRowByValue(\"toggleWhisper\");\n      assert.strictEqual((0, _qunitHelpers.count)(\".composer-actions svg.d-icon-far-eye-slash\"), 1, \"it sets the post type to whisper\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/reply/280\"), [], \"removes reply presence\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/whisper/280\"), [_user.default.current().id], \"adds whisper presence\");\n      await (0, _testHelpers.click)(\"#reply-control button.create\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/whisper/280\"), [], \"leaves whisper channel when composer closes\");\n    });\n    (0, _qunit.test)(\"Uses the edit channel for editing\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/280\");\n      await (0, _testHelpers.click)(\".topic-post:nth-of-type(1) button.show-more-actions\");\n      await (0, _testHelpers.click)(\".topic-post:nth-of-type(1) button.edit\");\n      assert.strictEqual((0, _qunitHelpers.query)(\".d-editor-input\").value, (0, _qunitHelpers.query)(\".topic-post:nth-of-type(1) .cooked > p\").innerText, \"composer has contents of post to be edited\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/edit/398\"), [], \"is not present when composer first opened\");\n      await (0, _testHelpers.fillIn)(\".d-editor-input\", \"some edited content\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/edit/398\"), [_user.default.current().id], \"becomes present in the edit channel\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/reply/280\"), [], \"is not made present in the reply channel\");\n      assert.deepEqual((0, _presencePretender.presentUserIds)(\"/discourse-presence/whisper/280\"), [], \"is not made present in the whisper channel\");\n    });\n    (0, _qunit.test)(\"Displays replying and whispering presence at bottom of topic\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/280\");\n      const avatarSelector = \".topic-above-footer-buttons-outlet.presence .presence-avatars .avatar\";\n      assert.ok((0, _qunitHelpers.exists)(\".topic-above-footer-buttons-outlet.presence\"), \"includes the presence component\");\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 0, \"no avatars displayed\");\n      await (0, _presencePretender.joinChannel)(\"/discourse-presence/reply/280\", {\n        id: 123,\n        avatar_template: \"/images/avatar.png\",\n        username: \"my-username\"\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 1, \"avatar displayed\");\n      await (0, _presencePretender.joinChannel)(\"/discourse-presence/whisper/280\", {\n        id: 124,\n        avatar_template: \"/images/avatar.png\",\n        username: \"my-username2\"\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 2, \"whisper avatar displayed\");\n      await (0, _presencePretender.leaveChannel)(\"/discourse-presence/reply/280\", {\n        id: 123\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 1, \"reply avatar removed\");\n      await (0, _presencePretender.leaveChannel)(\"/discourse-presence/whisper/280\", {\n        id: 124\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 0, \"whisper avatar removed\");\n    });\n    (0, _qunit.test)(\"Displays replying and whispering presence in composer\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/280\");\n      await (0, _testHelpers.click)(\"#topic-footer-buttons .btn.create\");\n      assert.ok((0, _qunitHelpers.exists)(\".d-editor-input\"), \"the composer input is visible\");\n      const avatarSelector = \".reply-to .presence-avatars .avatar\";\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 0, \"no avatars displayed\");\n      await (0, _presencePretender.joinChannel)(\"/discourse-presence/reply/280\", {\n        id: 123,\n        avatar_template: \"/images/avatar.png\",\n        username: \"my-username\"\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 1, \"avatar displayed\");\n      await (0, _presencePretender.joinChannel)(\"/discourse-presence/whisper/280\", {\n        id: 124,\n        avatar_template: \"/images/avatar.png\",\n        username: \"my-username2\"\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 2, \"whisper avatar displayed\");\n      await (0, _presencePretender.leaveChannel)(\"/discourse-presence/reply/280\", {\n        id: 123\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 1, \"reply avatar removed\");\n      await (0, _presencePretender.leaveChannel)(\"/discourse-presence/whisper/280\", {\n        id: 124\n      });\n      assert.strictEqual((0, _qunitHelpers.count)(avatarSelector), 0, \"whisper avatar removed\");\n    });\n  });\n});"],"names":[],"mappingsfile":"discourse-presence_tests.js"}