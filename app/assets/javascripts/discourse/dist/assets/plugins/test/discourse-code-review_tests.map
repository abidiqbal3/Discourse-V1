{"version":3,"sources":["discourse/plugins/discourse-code-review/acceptance/admin-webhook-configuration-test.js","discourse/plugins/discourse-code-review/acceptance/commit-approved-notifications-test.js","discourse/plugins/discourse-code-review/acceptance/self-approve-desktop-test.js","discourse/plugins/discourse-code-review/acceptance/self-approve-mobile-test.js","discourse/plugins/discourse-code-review/acceptance/use-activity-approval-pending-test.js","discourse/plugins/discourse-code-review/acceptance/user-activity-approval-given-test.js"],"sourcesContent":["define(\"discourse/plugins/discourse-code-review/acceptance/admin-webhook-configuration-test\", [\"discourse/tests/helpers/qunit-helpers\", \"@ember/test-helpers\", \"qunit\"], function (_qunitHelpers, _testHelpers, _qunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/qunit-helpers\",0,\"@ember/test-helpers\",0,\"qunit\"eaimeta@70e063a35619d71f\n\n  const restPrefix = \"/admin/plugins/code-review\";\n  (0, _qunitHelpers.acceptance)(\"Github Webhook Configuration\", function (needs) {\n    needs.user();\n    needs.pretender((server, helper) => {\n      server.get(`${restPrefix}/organizations.json`, () => {\n        return helper.response([\"org1\", \"org2\"]);\n      });\n      server.get(`${restPrefix}/organizations/org1/repos.json`, () => {\n        return helper.response([\"repo1\"]);\n      });\n      server.get(`${restPrefix}/organizations/org2/repos.json`, () => {\n        return helper.response([\"repo2\", \"repo3\"]);\n      });\n      server.get(`${restPrefix}/organizations/org1/repos/repo1/has-configured-webhook.json`, () => {\n        return helper.response({\n          has_configured_webhook: false\n        });\n      });\n      server.get(`${restPrefix}/organizations/org2/repos/repo2/has-configured-webhook.json`, () => {\n        return helper.response({\n          has_configured_webhook: true\n        });\n      });\n      server.get(`${restPrefix}/organizations/org2/repos/repo3/has-configured-webhook.json`, () => {\n        return helper.response({\n          has_configured_webhook: false\n        });\n      });\n      server.post(`${restPrefix}/organizations/org1/repos/repo1/configure-webhook.json`, () => {\n        return helper.response({\n          has_configured_webhook: true\n        });\n      });\n      server.post(`${restPrefix}/organizations/org2/repos/repo3/configure-webhook.json`, () => {\n        return helper.response({\n          has_configured_webhook: true\n        });\n      });\n    });\n    (0, _qunit.test)(\"Should display correctly\", async assert => {\n      await (0, _testHelpers.visit)(\"/admin/plugins/code-review\");\n      const tree = (0, _qunitHelpers.query)(\".code-review-webhook-tree\");\n      const organizations = tree.querySelectorAll(\".code-review-webhook-org\");\n      assert.equal(organizations.length, 2);\n      const [org1, org2] = organizations;\n      assert.equal(org1.querySelector(\"h2\").innerText, \"org1\");\n      assert.equal(org2.querySelector(\"h2\").innerText, \"org2\");\n      const org1Repos = org1.querySelectorAll(\".code-review-webhook-repo\");\n      const org2Repos = org2.querySelectorAll(\".code-review-webhook-repo\");\n      assert.equal(org1Repos.length, 1);\n      assert.equal(org2Repos.length, 2);\n      const repo1 = org1Repos[0];\n      const [repo2, repo3] = org2Repos;\n      assert.equal(repo1.querySelector(\"h3\").innerText, \"repo1\");\n      assert.equal(repo2.querySelector(\"h3\").innerText, \"repo2\");\n      assert.equal(repo3.querySelector(\"h3\").innerText, \"repo3\");\n      assert.equal(repo1.querySelectorAll(\".code-review-webhook-not-configured\").length, 1);\n      assert.equal(repo2.querySelectorAll(\".code-review-webhook-configured\").length, 1);\n      assert.equal(repo3.querySelectorAll(\".code-review-webhook-not-configured\").length, 1);\n    });\n    (0, _qunit.test)(\"Should send requests to change each unconfigured webhook\", async assert => {\n      await (0, _testHelpers.visit)(\"/admin/plugins/code-review\");\n      await (0, _testHelpers.click)(\".code-review-configure-webhooks-button\");\n      assert.equal((0, _qunitHelpers.count)(\".code-review-webhook-configured\"), 3);\n    });\n  });\n  (0, _qunitHelpers.acceptance)(\"GitHub Webhook Configuration - Repo List Error\", function (needs) {\n    needs.user();\n    needs.pretender((server, helper) => {\n      server.get(`${restPrefix}/organizations.json`, () => {\n        return helper.response([\"org1\"]);\n      });\n      server.get(`${restPrefix}/organizations/org1/repos.json`, () => {\n        return helper.response(401, {\n          error: \"credential error\",\n          failed: \"FAILED\"\n        });\n      });\n    });\n    (0, _qunit.test)(\"Should show an error message\", async assert => {\n      await (0, _testHelpers.visit)(\"/admin/plugins/code-review\");\n      assert.equal((0, _qunitHelpers.query)(\".modal-body\").innerText, \"credential error\");\n      await (0, _testHelpers.click)(\".modal-footer .btn-primary\");\n      assert.ok((0, _qunitHelpers.exists)(\".code-review-configure-webhooks-button:disabled\"));\n    });\n  });\n  (0, _qunitHelpers.acceptance)(\"GitHub Webhook Configuration - Webhook Config Get Error\", function (needs) {\n    needs.user();\n    needs.pretender((server, helper) => {\n      server.get(`${restPrefix}/organizations.json`, () => {\n        return helper.response([\"org1\"]);\n      });\n      server.get(`${restPrefix}/organizations/org1/repos.json`, () => {\n        return helper.response([\"repo1\"]);\n      });\n      server.get(`${restPrefix}/organizations/org1/repos/repo1/has-configured-webhook.json`, () => {\n        return helper.response(400, {\n          error: \"permissions error\",\n          failed: \"FAILED\"\n        });\n      });\n    });\n    (0, _qunit.test)(\"Should show an error message\", async assert => {\n      await (0, _testHelpers.visit)(\"/admin/plugins/code-review\");\n      assert.equal((0, _qunitHelpers.query)(\".modal-body\").innerText, \"permissions error\");\n      await (0, _testHelpers.click)(\".modal-footer .btn-primary\");\n      assert.ok((0, _qunitHelpers.exists)(\".code-review-configure-webhooks-button:disabled\"));\n    });\n  });\n});","define(\"discourse/plugins/discourse-code-review/acceptance/commit-approved-notifications-test\", [\"discourse/tests/helpers/qunit-helpers\", \"qunit\", \"@ember/test-helpers\", \"I18n\"], function (_qunitHelpers, _qunit, _testHelpers, _I18n) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/qunit-helpers\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"I18n\"eaimeta@70e063a35619d71f\n\n  (0, _qunitHelpers.acceptance)(\"Discourse Code Review - Notifications\", function (needs) {\n    needs.user({\n      redesigned_user_menu_enabled: true\n    });\n    needs.pretender((server, helper) => {\n      server.get(\"/notifications\", () => {\n        return helper.response({\n          notifications: [{\n            id: 801,\n            user_id: 12,\n            notification_type: 21,\n            // code_review_commit_approved notification type\n            read: true,\n            high_priority: false,\n            created_at: \"2001-10-17 15:41:10 UTC\",\n            post_number: 1,\n            topic_id: 883,\n            fancy_title: \"Osama's commit #1\",\n            slug: \"osama-s-commit-1\",\n            data: {\n              num_approved_commits: 1\n            }\n          }, {\n            id: 389,\n            user_id: 12,\n            notification_type: 21,\n            // code_review_commit_approved notification type\n            read: true,\n            high_priority: false,\n            created_at: \"2010-11-17 23:01:15 UTC\",\n            post_number: null,\n            topic_id: null,\n            fancy_title: null,\n            slug: null,\n            data: {\n              num_approved_commits: 10\n            }\n          }]\n        });\n      });\n    });\n    (0, _qunit.test)(\"code review commit approved notifications\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/\");\n      await (0, _testHelpers.click)(\".d-header-icons .current-user\");\n      const notifications = (0, _qunitHelpers.queryAll)(\"#quick-access-all-notifications ul li.notification a\");\n      assert.strictEqual(notifications.length, 2);\n      assert.strictEqual(notifications[0].textContent.replaceAll(/\\s+/g, \" \").trim(), _I18n.default.t(\"notifications.code_review.commit_approved.single\", {\n        topicTitle: \"Osama's commit #1\"\n      }), \"notification for a single commit approval has the right content\");\n      assert.ok(notifications[0].href.endsWith(\"/t/osama-s-commit-1/883\"), \"notification for a single commit approval links to the topic\");\n      assert.ok(notifications[0].querySelector(\".d-icon-check\"), \"notification for a single commit approval has the right icon\");\n      assert.strictEqual(notifications[1].textContent.replaceAll(/\\s+/g, \" \").trim(), _I18n.default.t(\"notifications.code_review.commit_approved.multiple\", {\n        count: 10\n      }), \"notification for multiple commits approval has the right content\");\n      assert.ok(notifications[1].href.endsWith(\"/u/eviltrout/activity/approval-given\"), \"notification for multiple commits approval links to the user approval-given page\");\n      assert.ok(notifications[1].querySelector(\".d-icon-check\"), \"notification for multiple commits approval has the right icon\");\n    });\n  });\n});","define(\"discourse/plugins/discourse-code-review/acceptance/self-approve-desktop-test\", [\"discourse/tests/helpers/qunit-helpers\", \"discourse/tests/fixtures/topic\", \"@ember/test-helpers\", \"qunit\", \"discourse-common/lib/object\"], function (_qunitHelpers, _topic, _testHelpers, _qunit, _object) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/qunit-helpers\",0,\"discourse/tests/fixtures/topic\",0,\"@ember/test-helpers\",0,\"qunit\",0,\"discourse-common/lib/object\"eaimeta@70e063a35619d71f\n\n  (0, _qunitHelpers.acceptance)(\"review desktop\", function (needs) {\n    needs.user({\n      can_review_code: true\n    });\n    needs.settings({\n      code_review_approved_tag: \"approved\",\n      code_review_pending_tag: \"pending\",\n      code_review_followup_tag: \"followup\"\n    });\n    needs.pretender(server => {\n      const json = (0, _object.cloneJSON)(_topic.default[\"/t/280/1.json\"]);\n      json.tags = [\"pending\"];\n      server.get(\"/t/281.json\", () => {\n        return [200, {\n          \"Content-Type\": \"application/json\"\n        }, json];\n      });\n    });\n    (0, _qunit.test)(\"shows approve button by default\", async assert => {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/281\");\n      assert.ok((0, _qunitHelpers.exists)(\"#topic-footer-button-approve\"));\n    });\n    (0, _qunit.test)(\"hides approve button if user is self\", async assert => {\n      (0, _qunitHelpers.updateCurrentUser)({\n        id: 1\n      });\n      await (0, _testHelpers.visit)(\"/t/this-is-a-test-topic/9/1\");\n      assert.ok(!(0, _qunitHelpers.exists)(\"#topic-footer-button-approve\"));\n    });\n  });\n});","define(\"discourse/plugins/discourse-code-review/acceptance/self-approve-mobile-test\", [\"discourse/tests/helpers/select-kit-helper\", \"discourse/tests/helpers/qunit-helpers\", \"discourse/tests/fixtures/topic\", \"@ember/test-helpers\", \"qunit\", \"discourse-common/lib/object\"], function (_selectKitHelper, _qunitHelpers, _topic, _testHelpers, _qunit, _object) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/select-kit-helper\",0,\"discourse/tests/helpers/qunit-helpers\",0,\"discourse/tests/fixtures/topic\",0,\"@ember/test-helpers\",0,\"qunit\",0,\"discourse-common/lib/object\"eaimeta@70e063a35619d71f\n\n  (0, _qunitHelpers.acceptance)(\"review mobile\", function (needs) {\n    needs.user({\n      can_review_code: true\n    });\n    needs.mobileView();\n    needs.settings({\n      code_review_approved_tag: \"approved\",\n      code_review_pending_tag: \"pending\",\n      code_review_followup_tag: \"followup\"\n    });\n    needs.pretender(server => {\n      const json = (0, _object.cloneJSON)(_topic.default[\"/t/280/1.json\"]);\n      json.tags = [\"pending\"];\n      server.get(\"/t/281.json\", () => {\n        return [200, {\n          \"Content-Type\": \"application/json\"\n        }, json];\n      });\n    });\n    (0, _qunit.test)(\"shows approve button by default\", async assert => {\n      await (0, _testHelpers.visit)(\"/t/internationalization-localization/281\");\n      const menu = (0, _selectKitHelper.default)(\".topic-footer-mobile-dropdown\");\n      await menu.expand();\n      assert.ok(menu.rowByValue(\"approve\").exists());\n    });\n    (0, _qunit.test)(\"hides approve button if user is self\", async assert => {\n      (0, _qunitHelpers.updateCurrentUser)({\n        id: 1\n      });\n      await (0, _testHelpers.visit)(\"/t/this-is-a-test-topic/9/1\");\n      const menu = (0, _selectKitHelper.default)(\".topic-footer-mobile-dropdown\");\n      await menu.expand();\n      assert.notOk(menu.rowByValue(\"approve\").exists());\n    });\n  });\n});","define(\"discourse/plugins/discourse-code-review/acceptance/use-activity-approval-pending-test\", [\"discourse/tests/helpers/qunit-helpers\", \"@ember/test-helpers\", \"qunit\", \"I18n\"], function (_qunitHelpers, _testHelpers, _qunit, _I18n) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/qunit-helpers\",0,\"@ember/test-helpers\",0,\"qunit\",0,\"I18n\"eaimeta@70e063a35619d71f\n\n  (0, _qunitHelpers.acceptance)(\"User Activity / Approval Pending - empty state\", function (needs) {\n    const currentUser = \"eviltrout\";\n    needs.user();\n    needs.pretender((server, helper) => {\n      const emptyResponse = {\n        topic_list: {\n          topics: []\n        }\n      };\n      server.get(`/topics/approval-pending/${currentUser}.json`, () => {\n        return helper.response(emptyResponse);\n      });\n    });\n    (0, _qunit.test)(\"Shows a blank page placeholder\", async function (assert) {\n      await (0, _testHelpers.visit)(`/u/${currentUser}/activity/approval-pending`);\n      assert.equal((0, _qunitHelpers.query)(\"div.empty-state span.empty-state-title\").innerText, _I18n.default.t(\"code_review.approval_pending_empty_state_title\"));\n    });\n  });\n});","define(\"discourse/plugins/discourse-code-review/acceptance/user-activity-approval-given-test\", [\"discourse/tests/helpers/qunit-helpers\", \"@ember/test-helpers\", \"qunit\", \"I18n\"], function (_qunitHelpers, _testHelpers, _qunit, _I18n) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"discourse/tests/helpers/qunit-helpers\",0,\"@ember/test-helpers\",0,\"qunit\",0,\"I18n\"eaimeta@70e063a35619d71f\n\n  (0, _qunitHelpers.acceptance)(\"User Activity / Approval Given - empty state\", function (needs) {\n    const currentUser = \"eviltrout\";\n    needs.user();\n    needs.pretender((server, helper) => {\n      const emptyResponse = {\n        topic_list: {\n          topics: []\n        }\n      };\n      server.get(`/topics/approval-given/${currentUser}.json`, () => {\n        return helper.response(emptyResponse);\n      });\n    });\n    (0, _qunit.test)(\"Shows a blank page placeholder\", async function (assert) {\n      await (0, _testHelpers.visit)(`/u/${currentUser}/activity/approval-given`);\n      assert.equal((0, _qunitHelpers.query)(\"div.empty-state span.empty-state-title\").innerText, _I18n.default.t(\"code_review.approval_given_empty_state_title\"));\n    });\n  });\n});"],"names":[],"mappingsjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"discourse-code-review_tests.js"}